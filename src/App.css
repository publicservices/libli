/* define default box model */
html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

/* variables */
:root {
    --color-theme: green;
    --color-text: black;
    --color-text-light: white;
    --color-text-placeholder: darkgray;
    --color-white: white;
    --color-background-modal: whitesmoke;

    --color-button-dark: gray;
    --size-container: 40rem;
}

/* default layout */

html,
body,
#root,
.App {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 100%;
    min-width: 100%;
}

html {
    font-family: sans-serif;
    font-size: 17px;
}

body {
    margin: 0px;
}


/* default elements */
picture {
    display: block;
}
details {    
}
summary {
    cursor: pointer;
}

/* application specifics */
.App {
    margin: 0 auto;
}

.AppHeader{
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    flex-grow: 0;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
}
.AppHeaderItem {
    display: flex;
    align-items: center;
    justify-content: flex-end;
}
.AppHeaderItem {
    margin: 0.5rem;
}

.headerButton {
    margin-right: 1rem;
}

.AppFooter {
    padding: 0.5rem;
    display: flex;
    justify-content: flex-end;
}
.AppFooter a {
    padding: 0.5rem;
}

.AppMain {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.topRightNav{
    /* display: flex; */
}

.titleAndLogo {
    display: flex;
    align-items: center;
}
.titleAndLogo a {
    padding: 0.5rem;
    display: flex;
}

.titleAndLogo a,
.titleAndLogo a:visited {
    text-decoration: none;
    color: var(--color-text);
}

.button {
    color: var(--color-text);
    border-radius: 0.2rem;
    font-style: normal;
    font-weight: normal;
    padding: 0.4rem 0.9rem;
    transition: background-color 200ms ease-in-out;
    border: 1px solid transparent;
}
.smallButton {
    padding: 0.2rem;
}

.lightButton {
    background-color: transparent;
}
.darkButton {
    background-color: var(--color-button-dark);
    color: var(--color-text-light);
}

button:hover{
    cursor: pointer;
}

.loggedInUser{
    margin-right: 1rem;
    cursor: pointer;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-width: 2rem;
    transition: max-width 500ms ease-in-out;
}
@media (min-width: 40rem) {
    .loggedInUser{
	max-width: 100%;
	font-size: 0.8rem;
    }   
}


.modalSignInButton{
    margin-top: 20px;
    float: right;
    cursor: pointer;
}

.Modal {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.ModalHeader{
    margin-bottom: 1.5rem;
}
.ModalTitle {
    font-size: 1rem;
}

.Modal--isVisible {
    display: flex;
}
  
.Modal--notVisible {
    display: none;
}
.ModalOverlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    background-color: rgba(0,0,0,0.6);
}
.ModalMain{
    background-color: var(--color-background-modal);
    padding: 1.5rem;
    width: 100%;
    max-width: 40rem;
}

.closeButton{
    cursor: pointer;
    margin: 8px;
    float: right;
}

.filterButton{
    display: none;
    margin-right: 20px;
    vertical-align: middle;
    cursor: pointer;
}

.errblock {
    background-color: lightcoral;
    padding: 15px;
}

/* custom r4 player */
.Player {
    display: none;
}
.Player--isPlaying {
    display: block;
    position: sticky;
    top: 0;
}
.Player radio4000-player {
    height: 100%;
}


/* form */
.Form {
    display: flex;
    flex-direction: column;
}
.FormItem {
    margin-bottom: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.FormItemSubmit {
    align-items: flex-end;
}
.FormItemHorizontal {
    display: flex;
    flex-direction: row;
    align-items: center;
}
.FormItemHorizontal .FormItemTitle {
    margin-right: 1rem;
}
.FormItemTitle {    
    color: var(--color-text-placeholder);
    padding: 0.5rem;
}
.Input,
.Textarea {
    color: var(--color-text);
    font-size: 1rem;
    padding: 0.5rem;
    border-radius: 0.2rem;
    border: 1px solid transparent;
}

.Input::placeholder,
.Textarea::placeholder {
    opacity: 1;
    color: var(--color-text-placeholder);
}

.Input {
    flex-grow: 1;
}
.InputFile {
    font-style: italic;
    font-size: 0.8rem;
}
.Textarea {
    min-width: 100%;
    max-width: 100%;
}
